
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ExpertConsensusScalarFieldEnum = {
  id: 'id',
  questionId: 'questionId',
  expertMean: 'expertMean',
  expertStd: 'expertStd',
  expertCount: 'expertCount',
  individualRatings: 'individualRatings',
  firstRating: 'firstRating',
  lastRating: 'lastRating',
  lastRefreshed: 'lastRefreshed'
};

exports.Prisma.BenchmarkScoreAggregateScalarFieldEnum = {
  id: 'id',
  modelVersionId: 'modelVersionId',
  scaleId: 'scaleId',
  hyperparameterHash: 'hyperparameterHash',
  hyperparameterConfig: 'hyperparameterConfig',
  systemPromptId: 'systemPromptId',
  messagePromptId: 'messagePromptId',
  runCount: 'runCount',
  modelMean: 'modelMean',
  modelStd: 'modelStd',
  modelMin: 'modelMin',
  modelMax: 'modelMax',
  modelMedian: 'modelMedian',
  expertConsensusMean: 'expertConsensusMean',
  rmseVsExperts: 'rmseVsExperts',
  firstRun: 'firstRun',
  lastRun: 'lastRun',
  experimentCount: 'experimentCount',
  lastRefreshed: 'lastRefreshed'
};

exports.Prisma.UserSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  refreshTokenHash: 'refreshTokenHash',
  expiresAt: 'expiresAt',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.EmailVerificationTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expiresAt: 'expiresAt',
  usedAt: 'usedAt',
  createdAt: 'createdAt'
};

exports.Prisma.PasswordResetTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  token: 'token',
  expiresAt: 'expiresAt',
  usedAt: 'usedAt',
  createdAt: 'createdAt'
};

exports.Prisma.BenchmarkScaleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  scaleType: 'scaleType',
  version: 'version',
  isValidated: 'isValidated',
  isPublic: 'isPublic',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.BenchmarkQuestionSubmissionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  promptValue: 'promptValue',
  response1Value: 'response1Value',
  response2Value: 'response2Value',
  rating1: 'rating1',
  rating2: 'rating2',
  instructionPrompt: 'instructionPrompt',
  notes: 'notes',
  metadata: 'metadata',
  status: 'status',
  reviewedBy: 'reviewedBy',
  reviewedAt: 'reviewedAt',
  rejectionReason: 'rejectionReason',
  createdAt: 'createdAt'
};

exports.Prisma.BenchmarkQuestionScalarFieldEnum = {
  id: 'id',
  scaleId: 'scaleId',
  position: 'position',
  promptId: 'promptId',
  promptValue: 'promptValue',
  responseId: 'responseId',
  responseValue: 'responseValue',
  isValidated: 'isValidated',
  isUserSubmitted: 'isUserSubmitted',
  metadata: 'metadata',
  adversarialType: 'adversarialType',
  adversarialCategory: 'adversarialCategory',
  difficultyLevel: 'difficultyLevel',
  expectedFailureMode: 'expectedFailureMode',
  successCriteria: 'successCriteria',
  adversarialMetadata: 'adversarialMetadata',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.BenchmarkRatingScalarFieldEnum = {
  id: 'id',
  questionId: 'questionId',
  userId: 'userId',
  rating: 'rating',
  confidence: 'confidence',
  reasoning: 'reasoning',
  metadata: 'metadata',
  createdAt: 'createdAt'
};

exports.Prisma.BenchmarkTagScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.BenchmarkTagQuestionLinkScalarFieldEnum = {
  id: 'id',
  questionId: 'questionId',
  tagId: 'tagId'
};

exports.Prisma.BenchmarkExperimentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  scaleId: 'scaleId',
  name: 'name',
  description: 'description',
  entityType: 'entityType',
  entityIds: 'entityIds',
  config: 'config',
  status: 'status',
  taskId: 'taskId',
  estimatedCost: 'estimatedCost',
  actualCost: 'actualCost',
  progress: 'progress',
  startedAt: 'startedAt',
  completedAt: 'completedAt',
  errorMessage: 'errorMessage',
  reviewedBy: 'reviewedBy',
  reviewedAt: 'reviewedAt',
  reviewNotes: 'reviewNotes',
  isPublic: 'isPublic',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.BenchmarkPromptScalarFieldEnum = {
  id: 'id',
  name: 'name',
  promptType: 'promptType',
  content: 'content',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.BenchmarkResultScalarFieldEnum = {
  id: 'id',
  experimentId: 'experimentId',
  repeatNumber: 'repeatNumber',
  modelVersionId: 'modelVersionId',
  toolConfigurationId: 'toolConfigurationId',
  questionId: 'questionId',
  hyperparameterConfig: 'hyperparameterConfig',
  hyperparameterHash: 'hyperparameterHash',
  systemPromptId: 'systemPromptId',
  messagePromptId: 'messagePromptId',
  score: 'score',
  reasoning: 'reasoning',
  rawResponse: 'rawResponse',
  responseTimeMs: 'responseTimeMs',
  tokenUsage: 'tokenUsage',
  status: 'status',
  errorType: 'errorType',
  errorMessage: 'errorMessage',
  apiCost: 'apiCost',
  isApproved: 'isApproved',
  approvalSource: 'approvalSource',
  createdAt: 'createdAt'
};

exports.Prisma.ReasoningEntryScalarFieldEnum = {
  id: 'id',
  benchmarkResultId: 'benchmarkResultId',
  reasoningType: 'reasoningType',
  content: 'content',
  sequenceOrder: 'sequenceOrder',
  confidenceLevel: 'confidenceLevel',
  processingTimeMs: 'processingTimeMs',
  metadata: 'metadata',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.UpdateScalarFieldEnum = {
  id: 'id',
  date: 'date',
  title: 'title',
  tag: 'tag',
  note: 'note',
  imageUrl: 'imageUrl',
  isPublished: 'isPublished',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.UpdateReactionScalarFieldEnum = {
  id: 'id',
  updateId: 'updateId',
  userId: 'userId',
  emojiType: 'emojiType',
  createdAt: 'createdAt'
};

exports.Prisma.SuggestionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  status: 'status',
  voteCount: 'voteCount',
  isVisible: 'isVisible',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.SuggestionVoteScalarFieldEnum = {
  id: 'id',
  suggestionId: 'suggestionId',
  userId: 'userId',
  voteValue: 'voteValue',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamMemberScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  displayName: 'displayName',
  role: 'role',
  bio: 'bio',
  avatarUrl: 'avatarUrl',
  displayOrder: 'displayOrder',
  isActive: 'isActive',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ModelScalarFieldEnum = {
  id: 'id',
  name: 'name',
  modelFamilyId: 'modelFamilyId',
  developer: 'developer',
  description: 'description',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ModelVersionScalarFieldEnum = {
  id: 'id',
  modelId: 'modelId',
  version: 'version',
  releaseDate: 'releaseDate',
  deprecationDate: 'deprecationDate',
  isLatest: 'isLatest',
  isAvailable: 'isAvailable',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ModelFamilyScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ToolScalarFieldEnum = {
  id: 'id',
  name: 'name',
  version: 'version',
  developer: 'developer',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ToolConfigurationScalarFieldEnum = {
  id: 'id',
  toolId: 'toolId',
  modelId: 'modelId',
  configurationName: 'configurationName',
  configurationSettings: 'configurationSettings',
  isActive: 'isActive',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.EvaluationEntityScalarFieldEnum = {
  id: 'id',
  entityType: 'entityType',
  modelVersionId: 'modelVersionId',
  toolConfigurationId: 'toolConfigurationId',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.BigFiveProfileScalarFieldEnum = {
  id: 'id',
  modelVersionId: 'modelVersionId',
  modelFamily: 'modelFamily',
  openness: 'openness',
  conscientiousness: 'conscientiousness',
  extraversion: 'extraversion',
  agreeableness: 'agreeableness',
  neuroticism: 'neuroticism',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HyperparameterScalarFieldEnum = {
  id: 'id',
  name: 'name',
  displayName: 'displayName',
  parameterType: 'parameterType',
  description: 'description',
  isActive: 'isActive',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ModelHyperparameterLinkScalarFieldEnum = {
  id: 'id',
  modelVersionId: 'modelVersionId',
  hyperparameterId: 'hyperparameterId',
  isConfigurable: 'isConfigurable',
  isRequired: 'isRequired',
  lockedValue: 'lockedValue',
  lockedAt: 'lockedAt',
  lockedReason: 'lockedReason',
  minValue: 'minValue',
  maxValue: 'maxValue',
  stepValue: 'stepValue',
  allowedValues: 'allowedValues',
  defaultValue: 'defaultValue',
  uiComponent: 'uiComponent',
  uiOrder: 'uiOrder',
  helpText: 'helpText',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ResponseProfileTestScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  testType: 'testType',
  version: 'version',
  isValidated: 'isValidated',
  isPublic: 'isPublic',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ResponseProfileQuestionScalarFieldEnum = {
  id: 'id',
  testId: 'testId',
  questionType: 'questionType',
  questionKey: 'questionKey',
  questionText: 'questionText',
  category: 'category',
  displayOrder: 'displayOrder',
  isActive: 'isActive',
  isDisplayed: 'isDisplayed',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.ResponseProfileAnswerScalarFieldEnum = {
  id: 'id',
  questionId: 'questionId',
  entityType: 'entityType',
  entityId: 'entityId',
  evaluationEntityId: 'evaluationEntityId',
  booleanValue: 'booleanValue',
  numericValue: 'numericValue',
  textValue: 'textValue',
  listValue: 'listValue',
  notes: 'notes',
  reviewerId: 'reviewerId',
  reviewAssignmentId: 'reviewAssignmentId',
  isApproved: 'isApproved',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  approvedAt: 'approvedAt',
  approvedBy: 'approvedBy'
};

exports.Prisma.ProfileReviewAssignmentScalarFieldEnum = {
  id: 'id',
  reviewerId: 'reviewerId',
  entityType: 'entityType',
  entityId: 'entityId',
  evaluationEntityId: 'evaluationEntityId',
  assignedAt: 'assignedAt',
  assignedBy: 'assignedBy',
  dueDate: 'dueDate',
  status: 'status',
  completedAt: 'completedAt',
  notes: 'notes'
};

exports.Prisma.SystemConfigScalarFieldEnum = {
  id: 'id',
  key: 'key',
  value: 'value',
  description: 'description',
  configType: 'configType',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.TechProfileQuestionScalarFieldEnum = {
  id: 'id',
  entityType: 'entityType',
  questionKey: 'questionKey',
  questionText: 'questionText',
  questionLabel: 'questionLabel',
  category: 'category',
  questionType: 'questionType',
  displayOrder: 'displayOrder',
  isActive: 'isActive',
  isDisplayed: 'isDisplayed',
  isFilterable: 'isFilterable',
  filterType: 'filterType',
  filterConfig: 'filterConfig',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  updatedAt: 'updatedAt',
  updatedBy: 'updatedBy'
};

exports.Prisma.TechProfileAnswerScalarFieldEnum = {
  id: 'id',
  entityType: 'entityType',
  entityId: 'entityId',
  evaluationEntityId: 'evaluationEntityId',
  questionId: 'questionId',
  answer: 'answer',
  notes: 'notes',
  reviewerId: 'reviewerId',
  reviewAssignmentId: 'reviewAssignmentId',
  isApproved: 'isApproved',
  createdAt: 'createdAt',
  createdBy: 'createdBy',
  approvedAt: 'approvedAt',
  approvedBy: 'approvedBy'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  username: 'username',
  passwordHash: 'passwordHash',
  role: 'role',
  firstName: 'firstName',
  lastName: 'lastName',
  isActive: 'isActive',
  isVerified: 'isVerified',
  emailVerifiedAt: 'emailVerifiedAt',
  lastLoginAt: 'lastLoginAt',
  failedLoginAttempts: 'failedLoginAttempts',
  lockedUntil: 'lockedUntil',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.UserExpertiseHistoryScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  expertiseLevel: 'expertiseLevel',
  effectiveFrom: 'effectiveFrom',
  effectiveTo: 'effectiveTo',
  assignedBy: 'assignedBy',
  notes: 'notes',
  createdAt: 'createdAt'
};

exports.Prisma.UserPermissionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  permission: 'permission',
  grantedBy: 'grantedBy',
  grantedAt: 'grantedAt',
  revokedAt: 'revokedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.EntityType = exports.$Enums.EntityType = {
  MODEL_VERSION: 'MODEL_VERSION',
  TOOL_CONFIGURATION: 'TOOL_CONFIGURATION'
};

exports.QuestionType = exports.$Enums.QuestionType = {
  BOOLEAN: 'BOOLEAN',
  NUMBER: 'NUMBER',
  TEXT: 'TEXT',
  LIST: 'LIST'
};

exports.ReviewStatus = exports.$Enums.ReviewStatus = {
  NOT_STARTED: 'NOT_STARTED',
  IN_PROGRESS: 'IN_PROGRESS',
  SUBMITTED: 'SUBMITTED',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED'
};

exports.UserRole = exports.$Enums.UserRole = {
  USER: 'USER',
  RESEARCHER: 'RESEARCHER'
};

exports.ExpertiseCategory = exports.$Enums.ExpertiseCategory = {
  EXPERT: 'EXPERT',
  PROFESSIONAL: 'PROFESSIONAL',
  TRAINEE: 'TRAINEE',
  STUDENT: 'STUDENT',
  PUBLIC: 'PUBLIC'
};

exports.ReasoningType = exports.$Enums.ReasoningType = {
  CHAIN_OF_THOUGHT: 'CHAIN_OF_THOUGHT',
  EXPLANATION: 'EXPLANATION',
  WORKING: 'WORKING',
  REFLECTION: 'REFLECTION'
};

exports.AdversarialType = exports.$Enums.AdversarialType = {
  RED_HERRING: 'RED_HERRING',
  TEMPORAL_ANCHORING: 'TEMPORAL_ANCHORING',
  COGNITIVE_BIAS: 'COGNITIVE_BIAS',
  CONTEXT_CONFUSION: 'CONTEXT_CONFUSION',
  PREMISE_DISTORTION: 'PREMISE_DISTORTION'
};

exports.Prisma.ModelName = {
  ExpertConsensus: 'ExpertConsensus',
  BenchmarkScoreAggregate: 'BenchmarkScoreAggregate',
  UserSession: 'UserSession',
  EmailVerificationToken: 'EmailVerificationToken',
  PasswordResetToken: 'PasswordResetToken',
  BenchmarkScale: 'BenchmarkScale',
  BenchmarkQuestionSubmission: 'BenchmarkQuestionSubmission',
  BenchmarkQuestion: 'BenchmarkQuestion',
  BenchmarkRating: 'BenchmarkRating',
  BenchmarkTag: 'BenchmarkTag',
  BenchmarkTagQuestionLink: 'BenchmarkTagQuestionLink',
  BenchmarkExperiment: 'BenchmarkExperiment',
  BenchmarkPrompt: 'BenchmarkPrompt',
  BenchmarkResult: 'BenchmarkResult',
  ReasoningEntry: 'ReasoningEntry',
  Update: 'Update',
  UpdateReaction: 'UpdateReaction',
  Suggestion: 'Suggestion',
  SuggestionVote: 'SuggestionVote',
  TeamMember: 'TeamMember',
  Model: 'Model',
  ModelVersion: 'ModelVersion',
  ModelFamily: 'ModelFamily',
  Tool: 'Tool',
  ToolConfiguration: 'ToolConfiguration',
  EvaluationEntity: 'EvaluationEntity',
  BigFiveProfile: 'BigFiveProfile',
  Hyperparameter: 'Hyperparameter',
  ModelHyperparameterLink: 'ModelHyperparameterLink',
  ResponseProfileTest: 'ResponseProfileTest',
  ResponseProfileQuestion: 'ResponseProfileQuestion',
  ResponseProfileAnswer: 'ResponseProfileAnswer',
  ProfileReviewAssignment: 'ProfileReviewAssignment',
  SystemConfig: 'SystemConfig',
  TechProfileQuestion: 'TechProfileQuestion',
  TechProfileAnswer: 'TechProfileAnswer',
  User: 'User',
  UserExpertiseHistory: 'UserExpertiseHistory',
  UserPermission: 'UserPermission'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/khaitruong/Documents/GitHub/MindBenchAI/server/prisma/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/khaitruong/Documents/GitHub/MindBenchAI/server/prisma/schema/_config.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../schema",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// server/prisma/schema/_config.prisma\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel ExpertConsensus {\n  id                String   @id @default(uuid())\n  questionId        String   @unique @map(\"question_id\")\n  expertMean        Float    @map(\"expert_mean\")\n  expertStd         Float?   @map(\"expert_std\")\n  expertCount       Int      @map(\"expert_count\")\n  individualRatings Json?    @map(\"individual_ratings\")\n  firstRating       DateTime @map(\"first_rating\")\n  lastRating        DateTime @map(\"last_rating\")\n  lastRefreshed     DateTime @default(now()) @map(\"last_refreshed\")\n\n  question BenchmarkQuestion @relation(fields: [questionId], references: [id])\n\n  @@index([expertCount])\n  @@index([lastRefreshed])\n  @@map(\"expert_consensus\")\n}\n\nmodel BenchmarkScoreAggregate {\n  id                   String   @id @default(uuid())\n  modelVersionId       String   @map(\"model_version_id\")\n  scaleId              String   @map(\"scale_id\")\n  hyperparameterHash   String?  @map(\"hyperparameter_hash\")\n  hyperparameterConfig Json?    @map(\"hyperparameter_config\")\n  systemPromptId       String?  @map(\"system_prompt_id\")\n  messagePromptId      String?  @map(\"message_prompt_id\")\n  runCount             Int      @map(\"run_count\")\n  modelMean            Float    @map(\"model_mean\")\n  modelStd             Float?   @map(\"model_std\")\n  modelMin             Float?   @map(\"model_min\")\n  modelMax             Float?   @map(\"model_max\")\n  modelMedian          Float?   @map(\"model_median\")\n  expertConsensusMean  Float?   @map(\"expert_consensus_mean\")\n  rmseVsExperts        Float?   @map(\"rmse_vs_experts\")\n  firstRun             DateTime @map(\"first_run\")\n  lastRun              DateTime @map(\"last_run\")\n  experimentCount      Int      @map(\"experiment_count\")\n  lastRefreshed        DateTime @default(now()) @map(\"last_refreshed\")\n\n  modelVersion  ModelVersion     @relation(fields: [modelVersionId], references: [id])\n  scale         BenchmarkScale   @relation(fields: [scaleId], references: [id])\n  systemPrompt  BenchmarkPrompt? @relation(\"AggregateSystemPrompt\", fields: [systemPromptId], references: [id])\n  messagePrompt BenchmarkPrompt? @relation(\"AggregateMessagePrompt\", fields: [messagePromptId], references: [id])\n\n  @@unique([modelVersionId, scaleId, hyperparameterHash, systemPromptId, messagePromptId])\n  @@index([scaleId, rmseVsExperts])\n  @@index([runCount])\n  @@index([lastRefreshed])\n  @@map(\"benchmark_score_aggregates\")\n}\n\nmodel UserSession {\n  id               String    @id @default(uuid())\n  userId           String    @map(\"user_id\")\n  refreshTokenHash String    @map(\"refresh_token_hash\")\n  expiresAt        DateTime  @map(\"expires_at\")\n  ipAddress        String?   @map(\"ip_address\") @db.Inet\n  userAgent        String?   @map(\"user_agent\")\n  isActive         Boolean   @default(true) @map(\"is_active\")\n  createdAt        DateTime  @default(now()) @map(\"created_at\")\n  updatedAt        DateTime? @updatedAt @map(\"updated_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([expiresAt])\n  @@index([isActive])\n  @@map(\"user_sessions\")\n}\n\nmodel EmailVerificationToken {\n  id        String    @id @default(uuid())\n  userId    String    @map(\"user_id\")\n  token     String    @unique\n  expiresAt DateTime  @map(\"expires_at\")\n  usedAt    DateTime? @map(\"used_at\")\n  createdAt DateTime  @default(now()) @map(\"created_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([token])\n  @@index([expiresAt])\n  @@map(\"email_verification_tokens\")\n}\n\nmodel PasswordResetToken {\n  id        String    @id @default(uuid())\n  userId    String    @map(\"user_id\")\n  token     String    @unique\n  expiresAt DateTime  @map(\"expires_at\")\n  usedAt    DateTime? @map(\"used_at\")\n  createdAt DateTime  @default(now()) @map(\"created_at\")\n\n  user User @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@index([token])\n  @@index([expiresAt])\n  @@map(\"password_reset_tokens\")\n}\n\nmodel BenchmarkScale {\n  id          String    @id @default(uuid())\n  name        String\n  description String?\n  scaleType   String    @map(\"scale_type\")\n  version     Int       @default(1)\n  isValidated Boolean   @default(false) @map(\"is_validated\")\n  isPublic    Boolean   @default(false) @map(\"is_public\")\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  createdBy   String?   @map(\"created_by\")\n  updatedAt   DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy   String?   @map(\"updated_by\")\n\n  createdByUser   User?                     @relation(\"BenchmarkScaleCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser   User?                     @relation(\"BenchmarkScaleUpdatedBy\", fields: [updatedBy], references: [id])\n  questions       BenchmarkQuestion[]\n  experiments     BenchmarkExperiment[]\n  scoreAggregates BenchmarkScoreAggregate[]\n\n  @@map(\"benchmark_scales\")\n}\n\nmodel BenchmarkQuestionSubmission {\n  id                String    @id @default(uuid())\n  userId            String    @map(\"user_id\")\n  promptValue       String    @map(\"prompt_value\")\n  response1Value    String    @map(\"response_1_value\")\n  response2Value    String    @map(\"response_2_value\")\n  rating1           Float     @map(\"rating_1\")\n  rating2           Float     @map(\"rating_2\")\n  instructionPrompt String?   @map(\"instruction_prompt\")\n  notes             String?\n  metadata          Json?\n  status            String    @default(\"pending\")\n  reviewedBy        String?   @map(\"reviewed_by\")\n  reviewedAt        DateTime? @map(\"reviewed_at\")\n  rejectionReason   String?   @map(\"rejection_reason\")\n  createdAt         DateTime  @default(now()) @map(\"created_at\")\n\n  user     User  @relation(fields: [userId], references: [id])\n  reviewer User? @relation(\"QuestionReviewer\", fields: [reviewedBy], references: [id])\n\n  @@index([userId])\n  @@index([status])\n  @@index([createdAt])\n  @@map(\"benchmark_question_submissions\")\n}\n\nmodel BenchmarkQuestion {\n  id                  String           @id @default(uuid())\n  scaleId             String?          @map(\"scale_id\")\n  position            Int?\n  promptId            String           @map(\"prompt_id\")\n  promptValue         String           @map(\"prompt_value\")\n  responseId          String           @map(\"response_id\")\n  responseValue       String           @map(\"response_value\")\n  isValidated         Boolean          @default(false) @map(\"is_validated\")\n  isUserSubmitted     Boolean          @default(false) @map(\"is_user_submitted\")\n  metadata            Json?\n  adversarialType     AdversarialType? @map(\"adversarial_type\")\n  adversarialCategory String?          @map(\"adversarial_category\")\n  difficultyLevel     Int?             @map(\"difficulty_level\")\n  expectedFailureMode String?          @map(\"expected_failure_mode\")\n  successCriteria     String?          @map(\"success_criteria\")\n  adversarialMetadata Json?            @map(\"adversarial_metadata\")\n  createdAt           DateTime         @default(now()) @map(\"created_at\")\n  createdBy           String?          @map(\"created_by\")\n  updatedAt           DateTime?        @updatedAt @map(\"updated_at\")\n  updatedBy           String?          @map(\"updated_by\")\n\n  scale           BenchmarkScale?            @relation(fields: [scaleId], references: [id])\n  createdByUser   User?                      @relation(\"BenchmarkQuestionCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser   User?                      @relation(\"BenchmarkQuestionUpdatedBy\", fields: [updatedBy], references: [id])\n  ratings         BenchmarkRating[]\n  results         BenchmarkResult[]\n  tags            BenchmarkTagQuestionLink[]\n  expertConsensus ExpertConsensus?\n\n  @@index([scaleId])\n  @@index([adversarialType])\n  @@index([difficultyLevel])\n  @@map(\"benchmark_questions\")\n}\n\nmodel BenchmarkRating {\n  id         String   @id @default(uuid())\n  questionId String   @map(\"question_id\")\n  userId     String   @map(\"user_id\")\n  rating     Float\n  confidence Float?\n  reasoning  String?\n  metadata   Json?\n  createdAt  DateTime @default(now()) @map(\"created_at\")\n\n  question BenchmarkQuestion @relation(fields: [questionId], references: [id])\n  user     User              @relation(fields: [userId], references: [id])\n\n  @@index([questionId])\n  @@index([userId])\n  @@map(\"benchmark_ratings\")\n}\n\nmodel BenchmarkTag {\n  id          String    @id @default(uuid())\n  name        String\n  description String?\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  createdBy   String?   @map(\"created_by\")\n  updatedAt   DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy   String?   @map(\"updated_by\")\n\n  createdByUser User?                      @relation(\"BenchmarkTagCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser User?                      @relation(\"BenchmarkTagUpdatedBy\", fields: [updatedBy], references: [id])\n  questions     BenchmarkTagQuestionLink[]\n\n  @@map(\"benchmark_tags\")\n}\n\nmodel BenchmarkTagQuestionLink {\n  id         String @id @default(uuid())\n  questionId String @map(\"question_id\")\n  tagId      String @map(\"tag_id\")\n\n  question BenchmarkQuestion @relation(fields: [questionId], references: [id])\n  tag      BenchmarkTag      @relation(fields: [tagId], references: [id])\n\n  @@map(\"benchmark_tag_question_link\")\n}\n\nmodel BenchmarkExperiment {\n  id            String     @id @default(uuid())\n  userId        String     @map(\"user_id\")\n  scaleId       String?    @map(\"scale_id\")\n  name          String\n  description   String?\n  entityType    EntityType @map(\"entity_type\")\n  entityIds     Json       @map(\"entity_ids\")\n  config        Json\n  status        String     @default(\"pending\")\n  taskId        String?    @map(\"task_id\")\n  estimatedCost Float?     @map(\"estimated_cost\")\n  actualCost    Float?     @map(\"actual_cost\")\n  progress      Int        @default(0)\n  startedAt     DateTime?  @map(\"started_at\")\n  completedAt   DateTime?  @map(\"completed_at\")\n  errorMessage  String?    @map(\"error_message\")\n  reviewedBy    String?    @map(\"reviewed_by\")\n  reviewedAt    DateTime?  @map(\"reviewed_at\")\n  reviewNotes   String?    @map(\"review_notes\")\n  isPublic      Boolean    @default(false) @map(\"is_public\")\n  createdAt     DateTime   @default(now()) @map(\"created_at\")\n  updatedAt     DateTime?  @updatedAt @map(\"updated_at\")\n  updatedBy     String?    @map(\"updated_by\")\n\n  user          User              @relation(fields: [userId], references: [id])\n  scale         BenchmarkScale?   @relation(fields: [scaleId], references: [id])\n  updatedByUser User?             @relation(\"ExperimentUpdatedBy\", fields: [updatedBy], references: [id])\n  reviewer      User?             @relation(\"ExperimentReviewer\", fields: [reviewedBy], references: [id])\n  results       BenchmarkResult[]\n\n  @@index([userId])\n  @@index([status])\n  @@index([isPublic])\n  @@map(\"benchmark_experiments\")\n}\n\nmodel BenchmarkPrompt {\n  id         String    @id @default(uuid())\n  name       String?\n  promptType String    @map(\"prompt_type\")\n  content    String\n  createdAt  DateTime  @default(now()) @map(\"created_at\")\n  createdBy  String?   @map(\"created_by\")\n  updatedAt  DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy  String?   @map(\"updated_by\")\n\n  createdByUser           User?                     @relation(\"BenchmarkPromptCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser           User?                     @relation(\"BenchmarkPromptUpdatedBy\", fields: [updatedBy], references: [id])\n  systemPromptResults     BenchmarkResult[]         @relation(\"SystemPromptResults\")\n  messagePromptResults    BenchmarkResult[]         @relation(\"MessagePromptResults\")\n  systemPromptAggregates  BenchmarkScoreAggregate[] @relation(\"AggregateSystemPrompt\")\n  messagePromptAggregates BenchmarkScoreAggregate[] @relation(\"AggregateMessagePrompt\")\n\n  @@map(\"benchmark_prompts\")\n}\n\nmodel BenchmarkResult {\n  id                   String   @id @default(uuid())\n  experimentId         String?  @map(\"experiment_id\")\n  repeatNumber         Int?     @map(\"repeat_number\")\n  modelVersionId       String?  @map(\"model_version_id\")\n  toolConfigurationId  String?  @map(\"tool_configuration_id\")\n  questionId           String?  @map(\"question_id\")\n  hyperparameterConfig Json?    @map(\"hyperparameter_config\")\n  hyperparameterHash   String?  @map(\"hyperparameter_hash\")\n  systemPromptId       String?  @map(\"system_prompt_id\")\n  messagePromptId      String?  @map(\"message_prompt_id\")\n  score                Int?\n  reasoning            String?\n  rawResponse          String?  @map(\"raw_response\")\n  responseTimeMs       Int?     @map(\"response_time_ms\")\n  tokenUsage           Json?    @map(\"token_usage\")\n  status               String   @default(\"pending\")\n  errorType            String?  @map(\"error_type\")\n  errorMessage         String?  @map(\"error_message\")\n  apiCost              Float?   @map(\"api_cost\")\n  isApproved           Boolean  @default(false) @map(\"is_approved\")\n  approvalSource       String   @default(\"experiment\") @map(\"approval_source\")\n  createdAt            DateTime @default(now()) @map(\"created_at\")\n\n  experiment        BenchmarkExperiment? @relation(fields: [experimentId], references: [id])\n  modelVersion      ModelVersion?        @relation(fields: [modelVersionId], references: [id])\n  toolConfiguration ToolConfiguration?   @relation(fields: [toolConfigurationId], references: [id])\n  question          BenchmarkQuestion?   @relation(fields: [questionId], references: [id])\n  systemPrompt      BenchmarkPrompt?     @relation(\"SystemPromptResults\", fields: [systemPromptId], references: [id])\n  messagePrompt     BenchmarkPrompt?     @relation(\"MessagePromptResults\", fields: [messagePromptId], references: [id])\n  reasoningEntries  ReasoningEntry[]\n\n  @@index([experimentId])\n  @@index([modelVersionId])\n  @@index([toolConfigurationId])\n  @@index([questionId])\n  @@index([isApproved])\n  @@index([hyperparameterHash])\n  @@map(\"benchmark_results\")\n}\n\nmodel ReasoningEntry {\n  id                String        @id @default(uuid())\n  benchmarkResultId String        @map(\"benchmark_result_id\")\n  reasoningType     ReasoningType @map(\"reasoning_type\")\n  content           Json\n  sequenceOrder     Int?          @map(\"sequence_order\")\n  confidenceLevel   Float?        @map(\"confidence_level\")\n  processingTimeMs  Int?          @map(\"processing_time_ms\")\n  metadata          Json?\n  createdAt         DateTime      @default(now()) @map(\"created_at\")\n  createdBy         String?       @map(\"created_by\")\n  updatedAt         DateTime?     @updatedAt @map(\"updated_at\")\n  updatedBy         String?       @map(\"updated_by\")\n\n  benchmarkResult BenchmarkResult @relation(fields: [benchmarkResultId], references: [id], onDelete: Cascade)\n  createdByUser   User?           @relation(\"ReasoningEntryCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser   User?           @relation(\"ReasoningEntryUpdatedBy\", fields: [updatedBy], references: [id])\n\n  @@index([benchmarkResultId])\n  @@index([reasoningType])\n  @@index([sequenceOrder])\n  @@map(\"reasoning_entries\")\n}\n\nmodel Update {\n  id          String    @id @default(uuid())\n  date        DateTime  @db.Date\n  title       String\n  tag         String\n  note        String?\n  imageUrl    String?   @map(\"image_url\")\n  isPublished Boolean   @default(true) @map(\"is_published\")\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  createdBy   String?   @map(\"created_by\")\n  updatedAt   DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy   String?   @map(\"updated_by\")\n\n  createdByUser User?            @relation(\"UpdateCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser User?            @relation(\"UpdateUpdatedBy\", fields: [updatedBy], references: [id])\n  reactions     UpdateReaction[]\n\n  @@index([date])\n  @@index([tag])\n  @@index([isPublished])\n  @@map(\"updates\")\n}\n\nmodel UpdateReaction {\n  id        String   @id @default(uuid())\n  updateId  String   @map(\"update_id\")\n  userId    String   @map(\"user_id\")\n  emojiType String   @map(\"emoji_type\")\n  createdAt DateTime @default(now()) @map(\"created_at\")\n\n  update Update @relation(fields: [updateId], references: [id])\n  user   User   @relation(fields: [userId], references: [id])\n\n  @@unique([updateId, userId, emojiType])\n  @@index([updateId])\n  @@index([userId])\n  @@map(\"update_reactions\")\n}\n\nmodel Suggestion {\n  id          String    @id @default(uuid())\n  title       String\n  description String?\n  status      String    @default(\"open_vote\")\n  voteCount   Int       @default(0) @map(\"vote_count\")\n  isVisible   Boolean   @default(true) @map(\"is_visible\")\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  createdBy   String?   @map(\"created_by\")\n  updatedAt   DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy   String?   @map(\"updated_by\")\n\n  createdByUser User?            @relation(\"SuggestionCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser User?            @relation(\"SuggestionUpdatedBy\", fields: [updatedBy], references: [id])\n  votes         SuggestionVote[]\n\n  @@index([status])\n  @@index([voteCount])\n  @@index([isVisible])\n  @@index([createdAt])\n  @@map(\"suggestions\")\n}\n\nmodel SuggestionVote {\n  id           String    @id @default(uuid())\n  suggestionId String    @map(\"suggestion_id\")\n  userId       String    @map(\"user_id\")\n  voteValue    Int       @map(\"vote_value\")\n  createdAt    DateTime  @default(now()) @map(\"created_at\")\n  updatedAt    DateTime? @updatedAt @map(\"updated_at\")\n\n  suggestion Suggestion @relation(fields: [suggestionId], references: [id])\n  user       User       @relation(fields: [userId], references: [id])\n\n  @@unique([suggestionId, userId])\n  @@index([suggestionId])\n  @@index([userId])\n  @@map(\"suggestion_votes\")\n}\n\nmodel TeamMember {\n  id           String    @id @default(uuid())\n  userId       String    @unique @map(\"user_id\")\n  displayName  String    @map(\"display_name\")\n  role         String\n  bio          String?\n  avatarUrl    String?   @map(\"avatar_url\")\n  displayOrder Int?      @map(\"display_order\")\n  isActive     Boolean   @default(true) @map(\"is_active\")\n  createdAt    DateTime  @default(now()) @map(\"created_at\")\n  createdBy    String?   @map(\"created_by\")\n  updatedAt    DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy    String?   @map(\"updated_by\")\n\n  user          User  @relation(\"TeamMemberUser\", fields: [userId], references: [id])\n  createdByUser User? @relation(\"TeamMemberCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser User? @relation(\"TeamMemberUpdatedBy\", fields: [updatedBy], references: [id])\n\n  @@index([isActive])\n  @@index([displayOrder])\n  @@map(\"team_members\")\n}\n\nmodel Model {\n  id            String    @id @default(uuid())\n  name          String    @unique\n  modelFamilyId String    @map(\"model_family_id\")\n  developer     String\n  description   String?\n  createdAt     DateTime  @default(now()) @map(\"created_at\")\n  createdBy     String?   @map(\"created_by\")\n  updatedAt     DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy     String?   @map(\"updated_by\")\n\n  versions           ModelVersion[]\n  toolConfigurations ToolConfiguration[]\n  modelFamily        ModelFamily         @relation(fields: [modelFamilyId], references: [id])\n  createdByUser      User?               @relation(\"ModelCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser      User?               @relation(\"ModelUpdatedBy\", fields: [updatedBy], references: [id])\n\n  @@index([modelFamilyId])\n  @@index([developer])\n  @@index([name])\n  @@map(\"models\")\n}\n\nmodel ModelVersion {\n  id              String    @id @default(uuid())\n  modelId         String    @map(\"model_id\")\n  version         String\n  releaseDate     DateTime? @map(\"release_date\") @db.Date\n  deprecationDate DateTime? @map(\"deprecation_date\") @db.Date\n  isLatest        Boolean   @default(false) @map(\"is_latest\")\n  isAvailable     Boolean   @default(true) @map(\"is_available\")\n  createdAt       DateTime  @default(now()) @map(\"created_at\")\n  createdBy       String?   @map(\"created_by\")\n  updatedAt       DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy       String?   @map(\"updated_by\")\n\n  model               Model                     @relation(fields: [modelId], references: [id])\n  createdByUser       User?                     @relation(\"ModelVersionCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser       User?                     @relation(\"ModelVersionUpdatedBy\", fields: [updatedBy], references: [id])\n  evaluationEntities  EvaluationEntity[]\n  benchmarkResults    BenchmarkResult[]\n  hyperparameterLinks ModelHyperparameterLink[]\n  scoreAggregates     BenchmarkScoreAggregate[]\n  bigFiveProfile      BigFiveProfile?\n\n  @@unique([modelId, version])\n  @@index([modelId])\n  @@index([version])\n  @@index([isLatest])\n  @@index([isAvailable])\n  @@map(\"model_versions\")\n}\n\nmodel ModelFamily {\n  id        String    @id @default(uuid())\n  name      String    @unique\n  createdAt DateTime  @default(now()) @map(\"created_at\")\n  createdBy String?   @map(\"created_by\")\n  updatedAt DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy String?   @map(\"updated_by\")\n\n  models        Model[]\n  createdByUser User?   @relation(\"ModelFamilyCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser User?   @relation(\"ModelFamilyUpdatedBy\", fields: [updatedBy], references: [id])\n\n  @@map(\"model_families\")\n}\n\nmodel Tool {\n  id        String    @id @default(uuid())\n  name      String    @unique\n  version   String?\n  developer String?\n  createdAt DateTime  @default(now()) @map(\"created_at\")\n  createdBy String?   @map(\"created_by\")\n  updatedAt DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy String?   @map(\"updated_by\")\n\n  createdByUser  User?               @relation(\"ToolCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser  User?               @relation(\"ToolUpdatedBy\", fields: [updatedBy], references: [id])\n  configurations ToolConfiguration[]\n\n  @@index([developer])\n  @@map(\"tools\")\n}\n\nmodel ToolConfiguration {\n  id                    String    @id @default(uuid())\n  toolId                String    @map(\"tool_id\")\n  modelId               String    @map(\"model_id\")\n  configurationName     String    @map(\"configuration_name\")\n  configurationSettings Json?     @map(\"configuration_settings\")\n  isActive              Boolean   @default(true) @map(\"is_active\")\n  createdAt             DateTime  @default(now()) @map(\"created_at\")\n  createdBy             String?   @map(\"created_by\")\n  updatedAt             DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy             String?   @map(\"updated_by\")\n\n  tool               Tool               @relation(fields: [toolId], references: [id])\n  model              Model              @relation(fields: [modelId], references: [id])\n  createdByUser      User?              @relation(\"ToolConfigCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser      User?              @relation(\"ToolConfigUpdatedBy\", fields: [updatedBy], references: [id])\n  evaluationEntities EvaluationEntity[]\n  benchmarkResults   BenchmarkResult[]\n\n  @@unique([toolId, modelId])\n  @@index([modelId])\n  @@index([isActive])\n  @@map(\"tool_configurations\")\n}\n\nmodel EvaluationEntity {\n  id                  String     @id @default(uuid())\n  entityType          EntityType @map(\"entity_type\")\n  modelVersionId      String?    @map(\"model_version_id\")\n  toolConfigurationId String?    @map(\"tool_configuration_id\")\n  createdAt           DateTime   @default(now()) @map(\"created_at\")\n  createdBy           String?    @map(\"created_by\")\n  updatedAt           DateTime?  @updatedAt @map(\"updated_at\")\n  updatedBy           String?    @map(\"updated_by\")\n\n  modelVersion           ModelVersion?             @relation(fields: [modelVersionId], references: [id])\n  toolConfiguration      ToolConfiguration?        @relation(fields: [toolConfigurationId], references: [id])\n  createdByUser          User?                     @relation(\"EvaluationEntityCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser          User?                     @relation(\"EvaluationEntityUpdatedBy\", fields: [updatedBy], references: [id])\n  techProfileAnswers     TechProfileAnswer[]\n  responseProfileAnswers ResponseProfileAnswer[]\n  reviewAssignments      ProfileReviewAssignment[]\n\n  @@index([entityType])\n  @@index([modelVersionId])\n  @@index([toolConfigurationId])\n  @@map(\"evaluation_entities\")\n}\n\nmodel BigFiveProfile {\n  id                String    @id @default(uuid())\n  modelVersionId    String    @unique @map(\"model_version_id\")\n  modelFamily       String?   @map(\"model_family\")\n  openness          Int\n  conscientiousness Int\n  extraversion      Int\n  agreeableness     Int\n  neuroticism       Int\n  createdAt         DateTime  @default(now()) @map(\"created_at\")\n  updatedAt         DateTime? @updatedAt @map(\"updated_at\")\n\n  modelVersion ModelVersion @relation(fields: [modelVersionId], references: [id])\n\n  @@index([modelFamily])\n  @@map(\"big_five_profiles\")\n}\n\n// ==================== ENUMS ====================\nenum EntityType {\n  MODEL_VERSION      @map(\"model_version\")\n  TOOL_CONFIGURATION @map(\"tool_configuration\")\n}\n\nenum QuestionType {\n  BOOLEAN @map(\"boolean\")\n  NUMBER  @map(\"number\")\n  TEXT    @map(\"text\")\n  LIST    @map(\"list\")\n}\n\nenum ReviewStatus {\n  NOT_STARTED @map(\"not_started\")\n  IN_PROGRESS @map(\"in_progress\")\n  SUBMITTED   @map(\"submitted\")\n  APPROVED    @map(\"approved\")\n  REJECTED    @map(\"rejected\")\n}\n\nenum UserRole {\n  USER       @map(\"user\")\n  RESEARCHER @map(\"researcher\")\n}\n\nenum ExpertiseCategory {\n  EXPERT       @map(\"expert\")\n  PROFESSIONAL @map(\"professional\")\n  TRAINEE      @map(\"trainee\")\n  STUDENT      @map(\"student\")\n  PUBLIC       @map(\"public\")\n}\n\nenum ReasoningType {\n  CHAIN_OF_THOUGHT @map(\"chain_of_thought\")\n  EXPLANATION      @map(\"explanation\")\n  WORKING          @map(\"working\")\n  REFLECTION       @map(\"reflection\")\n}\n\nenum AdversarialType {\n  RED_HERRING        @map(\"red_herring\")\n  TEMPORAL_ANCHORING @map(\"temporal_anchoring\")\n  COGNITIVE_BIAS     @map(\"cognitive_bias\")\n  CONTEXT_CONFUSION  @map(\"context_confusion\")\n  PREMISE_DISTORTION @map(\"premise_distortion\")\n}\n\nmodel Hyperparameter {\n  id            String    @id @default(uuid())\n  name          String    @unique\n  displayName   String    @map(\"display_name\")\n  parameterType String    @map(\"parameter_type\")\n  description   String?\n  isActive      Boolean   @default(true) @map(\"is_active\")\n  createdAt     DateTime  @default(now()) @map(\"created_at\")\n  createdBy     String?   @map(\"created_by\")\n  updatedAt     DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy     String?   @map(\"updated_by\")\n\n  createdByUser User?                     @relation(\"HyperparameterCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser User?                     @relation(\"HyperparameterUpdatedBy\", fields: [updatedBy], references: [id])\n  modelLinks    ModelHyperparameterLink[]\n\n  @@index([name])\n  @@index([isActive])\n  @@map(\"hyperparameters\")\n}\n\nmodel ModelHyperparameterLink {\n  id               String    @id @default(uuid())\n  modelVersionId   String    @map(\"model_version_id\")\n  hyperparameterId String    @map(\"hyperparameter_id\")\n  isConfigurable   Boolean   @default(true) @map(\"is_configurable\")\n  isRequired       Boolean   @default(false) @map(\"is_required\")\n  lockedValue      Json?     @map(\"locked_value\")\n  lockedAt         DateTime? @map(\"locked_at\")\n  lockedReason     String?   @map(\"locked_reason\")\n  minValue         Decimal?  @map(\"min_value\")\n  maxValue         Decimal?  @map(\"max_value\")\n  stepValue        Decimal?  @map(\"step_value\")\n  allowedValues    Json?     @map(\"allowed_values\")\n  defaultValue     Json?     @map(\"default_value\")\n  uiComponent      String?   @map(\"ui_component\")\n  uiOrder          Int       @default(0) @map(\"ui_order\")\n  helpText         String?   @map(\"help_text\")\n  createdAt        DateTime  @default(now()) @map(\"created_at\")\n  createdBy        String?   @map(\"created_by\")\n  updatedAt        DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy        String?   @map(\"updated_by\")\n\n  modelVersion   ModelVersion   @relation(fields: [modelVersionId], references: [id])\n  hyperparameter Hyperparameter @relation(fields: [hyperparameterId], references: [id])\n  createdByUser  User?          @relation(\"ModelHyperparameterLinkCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser  User?          @relation(\"ModelHyperparameterLinkUpdatedBy\", fields: [updatedBy], references: [id])\n\n  @@unique([modelVersionId, hyperparameterId])\n  @@index([modelVersionId])\n  @@index([hyperparameterId])\n  @@index([isConfigurable])\n  @@map(\"model_hyperparameter_links\")\n}\n\nmodel ResponseProfileTest {\n  id          String    @id @default(uuid())\n  name        String\n  description String?\n  testType    String    @map(\"test_type\")\n  version     Int       @default(1)\n  isValidated Boolean   @default(false) @map(\"is_validated\")\n  isPublic    Boolean   @default(false) @map(\"is_public\")\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  createdBy   String?   @map(\"created_by\")\n  updatedAt   DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy   String?   @map(\"updated_by\")\n\n  questions ResponseProfileQuestion[]\n\n  @@map(\"response_profile_test\")\n}\n\nmodel ResponseProfileQuestion {\n  id           String       @id @default(uuid())\n  testId       String?      @map(\"test_id\")\n  questionType QuestionType @map(\"question_type\")\n  questionKey  String       @map(\"question_key\")\n  questionText String       @map(\"question_text\")\n  category     String\n  displayOrder Int          @map(\"display_order\")\n  isActive     Boolean      @default(true) @map(\"is_active\")\n  isDisplayed  Boolean      @default(true) @map(\"is_displayed\")\n  createdAt    DateTime     @default(now()) @map(\"created_at\")\n  createdBy    String?      @map(\"created_by\")\n  updatedAt    DateTime?    @updatedAt @map(\"updated_at\")\n  updatedBy    String?      @map(\"updated_by\")\n\n  test          ResponseProfileTest?    @relation(fields: [testId], references: [id])\n  createdByUser User?                   @relation(\"ResponseQuestionCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser User?                   @relation(\"ResponseQuestionUpdatedBy\", fields: [updatedBy], references: [id])\n  answers       ResponseProfileAnswer[]\n\n  @@unique([questionText, questionKey])\n  @@map(\"response_profile_questions\")\n}\n\nmodel ResponseProfileAnswer {\n  id                 String     @id @default(uuid())\n  questionId         String     @map(\"question_id\")\n  entityType         EntityType @map(\"entity_type\")\n  entityId           String     @map(\"entity_id\")\n  evaluationEntityId String     @map(\"evaluation_entity_id\")\n  booleanValue       Boolean?   @map(\"boolean_value\")\n  numericValue       Decimal?   @map(\"numeric_value\")\n  textValue          String?    @map(\"text_value\")\n  listValue          String?    @map(\"list_value\")\n  notes              String?\n  reviewerId         String     @map(\"reviewer_id\")\n  reviewAssignmentId String?    @map(\"review_assignment_id\")\n  isApproved         Boolean    @default(false) @map(\"is_approved\")\n  createdAt          DateTime   @default(now()) @map(\"created_at\")\n  createdBy          String?    @map(\"created_by\")\n  approvedAt         DateTime?  @map(\"approved_at\")\n  approvedBy         String?    @map(\"approved_by\")\n\n  question         ResponseProfileQuestion  @relation(fields: [questionId], references: [id])\n  reviewer         User                     @relation(\"ResponseProfileReviewer\", fields: [reviewerId], references: [id])\n  approver         User?                    @relation(\"ResponseProfileApprover\", fields: [approvedBy], references: [id])\n  createdByUser    User?                    @relation(\"ResponseProfileCreatedBy\", fields: [createdBy], references: [id])\n  reviewAssignment ProfileReviewAssignment? @relation(fields: [reviewAssignmentId], references: [id])\n  evaluationEntity EvaluationEntity         @relation(fields: [evaluationEntityId], references: [id])\n\n  @@index([questionId, isApproved, createdAt])\n  @@index([evaluationEntityId])\n  @@index([reviewAssignmentId])\n  @@index([isApproved, createdAt])\n  @@map(\"response_profile_answers\")\n}\n\nmodel ProfileReviewAssignment {\n  id                 String       @id @default(uuid())\n  reviewerId         String       @map(\"reviewer_id\")\n  entityType         EntityType   @map(\"entity_type\")\n  entityId           String       @map(\"entity_id\")\n  evaluationEntityId String       @map(\"evaluation_entity_id\")\n  assignedAt         DateTime     @default(now()) @map(\"assigned_at\")\n  assignedBy         String?      @map(\"assigned_by\")\n  dueDate            DateTime?    @map(\"due_date\")\n  status             ReviewStatus @default(NOT_STARTED)\n  completedAt        DateTime?    @map(\"completed_at\")\n  notes              String?\n\n  reviewer           User                    @relation(\"ReviewerAssignments\", fields: [reviewerId], references: [id])\n  assigner           User?                   @relation(\"AssignedReviews\", fields: [assignedBy], references: [id])\n  evaluationEntity   EvaluationEntity        @relation(fields: [evaluationEntityId], references: [id])\n  techProfileAnswers TechProfileAnswer[]\n  responseAnswers    ResponseProfileAnswer[]\n\n  @@unique([reviewerId, entityType, entityId])\n  @@index([reviewerId, status])\n  @@index([status])\n  @@index([evaluationEntityId])\n  @@map(\"profile_review_assignments\")\n}\n\nmodel SystemConfig {\n  id          String    @id @default(uuid())\n  key         String    @unique\n  value       Json\n  description String?\n  configType  String    @default(\"general\") @map(\"config_type\")\n  createdAt   DateTime  @default(now()) @map(\"created_at\")\n  createdBy   String?   @map(\"created_by\")\n  updatedAt   DateTime? @updatedAt @map(\"updated_at\")\n  updatedBy   String?   @map(\"updated_by\")\n\n  createdByUser User? @relation(\"SystemConfigCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser User? @relation(\"SystemConfigUpdatedBy\", fields: [updatedBy], references: [id])\n\n  @@index([configType])\n  @@map(\"system_config\")\n}\n\nmodel TechProfileQuestion {\n  id            String       @id @default(uuid())\n  entityType    EntityType   @map(\"entity_type\")\n  questionKey   String       @map(\"question_key\")\n  questionText  String       @map(\"question_text\")\n  questionLabel String?      @map(\"question_label\")\n  category      String\n  questionType  QuestionType @map(\"question_type\")\n  displayOrder  Int          @map(\"display_order\")\n  isActive      Boolean      @default(true) @map(\"is_active\")\n  isDisplayed   Boolean      @default(true) @map(\"is_displayed\")\n  isFilterable  Boolean      @default(false) @map(\"is_filterable\")\n  filterType    String?      @map(\"filter_type\")\n  filterConfig  Json?        @map(\"filter_config\")\n  createdAt     DateTime     @default(now()) @map(\"created_at\")\n  createdBy     String?      @map(\"created_by\")\n  updatedAt     DateTime?    @updatedAt @map(\"updated_at\")\n  updatedBy     String?      @map(\"updated_by\")\n\n  createdByUser User?               @relation(\"TechQuestionCreatedBy\", fields: [createdBy], references: [id])\n  updatedByUser User?               @relation(\"TechQuestionUpdatedBy\", fields: [updatedBy], references: [id])\n  answers       TechProfileAnswer[]\n\n  @@unique([entityType, questionKey])\n  @@index([entityType, isActive])\n  @@index([isDisplayed, displayOrder])\n  @@map(\"tech_profile_questions\")\n}\n\nmodel TechProfileAnswer {\n  id                 String     @id @default(uuid())\n  entityType         EntityType @map(\"entity_type\")\n  entityId           String     @map(\"entity_id\")\n  evaluationEntityId String     @map(\"evaluation_entity_id\")\n  questionId         String     @map(\"question_id\")\n  answer             Json       @map(\"answer\")\n  notes              String?\n  reviewerId         String?    @map(\"reviewer_id\")\n  reviewAssignmentId String?    @map(\"review_assignment_id\")\n  isApproved         Boolean    @default(false) @map(\"is_approved\")\n  createdAt          DateTime   @default(now()) @map(\"created_at\")\n  createdBy          String?    @map(\"created_by\")\n  approvedAt         DateTime?  @map(\"approved_at\")\n  approvedBy         String?    @map(\"approved_by\")\n\n  question         TechProfileQuestion      @relation(fields: [questionId], references: [id])\n  reviewer         User?                    @relation(\"TechProfileReviewer\", fields: [reviewerId], references: [id])\n  approver         User?                    @relation(\"TechProfileApprover\", fields: [approvedBy], references: [id])\n  createdByUser    User?                    @relation(\"TechProfileCreatedBy\", fields: [createdBy], references: [id])\n  reviewAssignment ProfileReviewAssignment? @relation(fields: [reviewAssignmentId], references: [id])\n  evaluationEntity EvaluationEntity         @relation(fields: [evaluationEntityId], references: [id])\n\n  @@index([entityId, questionId, isApproved, createdAt])\n  @@index([evaluationEntityId])\n  @@index([reviewAssignmentId])\n  @@index([isApproved, createdAt])\n  @@map(\"tech_profile_answers\")\n}\n\nmodel User {\n  id                  String    @id @default(uuid())\n  email               String    @unique\n  username            String    @unique\n  passwordHash        String    @map(\"password_hash\")\n  role                UserRole  @default(USER)\n  firstName           String?   @map(\"first_name\")\n  lastName            String?   @map(\"last_name\")\n  isActive            Boolean   @default(true) @map(\"is_active\")\n  isVerified          Boolean   @default(false) @map(\"is_verified\")\n  emailVerifiedAt     DateTime? @map(\"email_verified_at\")\n  lastLoginAt         DateTime? @map(\"last_login_at\")\n  failedLoginAttempts Int       @default(0) @map(\"failed_login_attempts\")\n  lockedUntil         DateTime? @map(\"locked_until\")\n  createdAt           DateTime  @default(now()) @map(\"created_at\")\n  updatedAt           DateTime? @updatedAt @map(\"updated_at\")\n\n  // Models/Tools\n  modelsCreated             Model[]             @relation(\"ModelCreatedBy\")\n  modelsUpdated             Model[]             @relation(\"ModelUpdatedBy\")\n  modelVersionsCreated      ModelVersion[]      @relation(\"ModelVersionCreatedBy\")\n  modelVersionsUpdated      ModelVersion[]      @relation(\"ModelVersionUpdatedBy\")\n  toolsCreated              Tool[]              @relation(\"ToolCreatedBy\")\n  toolsUpdated              Tool[]              @relation(\"ToolUpdatedBy\")\n  toolConfigsCreated        ToolConfiguration[] @relation(\"ToolConfigCreatedBy\")\n  toolConfigsUpdated        ToolConfiguration[] @relation(\"ToolConfigUpdatedBy\")\n  evaluationEntitiesCreated EvaluationEntity[]  @relation(\"EvaluationEntityCreatedBy\")\n  evaluationEntitiesUpdated EvaluationEntity[]  @relation(\"EvaluationEntityUpdatedBy\")\n  modelFamiliesCreated      ModelFamily[]       @relation(\"ModelFamilyCreatedBy\")\n  modelFamiliesUpdated      ModelFamily[]       @relation(\"ModelFamilyUpdatedBy\")\n\n  // Reviews & Qs\n  reviewAssignments        ProfileReviewAssignment[] @relation(\"ReviewerAssignments\")\n  assignedReviews          ProfileReviewAssignment[] @relation(\"AssignedReviews\")\n  techProfileAnswers       TechProfileAnswer[]       @relation(\"TechProfileReviewer\")\n  techProfileApprovals     TechProfileAnswer[]       @relation(\"TechProfileApprover\")\n  techProfileCreated       TechProfileAnswer[]       @relation(\"TechProfileCreatedBy\")\n  responseProfileAnswers   ResponseProfileAnswer[]   @relation(\"ResponseProfileReviewer\")\n  responseProfileApprovals ResponseProfileAnswer[]   @relation(\"ResponseProfileApprover\")\n  responseProfileCreated   ResponseProfileAnswer[]   @relation(\"ResponseProfileCreatedBy\")\n  techQuestionsCreated     TechProfileQuestion[]     @relation(\"TechQuestionCreatedBy\")\n  techQuestionsUpdated     TechProfileQuestion[]     @relation(\"TechQuestionUpdatedBy\")\n  responseQuestionsCreated ResponseProfileQuestion[] @relation(\"ResponseQuestionCreatedBy\")\n  responseQuestionsUpdated ResponseProfileQuestion[] @relation(\"ResponseQuestionUpdatedBy\")\n\n  // Hyperparams\n  hyperparametersCreated     Hyperparameter[]          @relation(\"HyperparameterCreatedBy\")\n  hyperparametersUpdated     Hyperparameter[]          @relation(\"HyperparameterUpdatedBy\")\n  hyperparameterLinksCreated ModelHyperparameterLink[] @relation(\"ModelHyperparameterLinkCreatedBy\")\n  hyperparameterLinksUpdated ModelHyperparameterLink[] @relation(\"ModelHyperparameterLinkUpdatedBy\")\n\n  // Benchmarking\n  benchmarkScalesCreated BenchmarkScale[]              @relation(\"BenchmarkScaleCreatedBy\")\n  benchmarkScalesUpdated BenchmarkScale[]              @relation(\"BenchmarkScaleUpdatedBy\")\n  questionSubmissions    BenchmarkQuestionSubmission[]\n  questionsCreated       BenchmarkQuestion[]           @relation(\"BenchmarkQuestionCreatedBy\")\n  questionsUpdated       BenchmarkQuestion[]           @relation(\"BenchmarkQuestionUpdatedBy\")\n  questionRatings        BenchmarkRating[]\n  experiments            BenchmarkExperiment[]\n  experimentsUpdated     BenchmarkExperiment[]         @relation(\"ExperimentUpdatedBy\")\n  experimentsReviewed    BenchmarkExperiment[]         @relation(\"ExperimentReviewer\")\n  promptsCreated         BenchmarkPrompt[]             @relation(\"BenchmarkPromptCreatedBy\")\n  promptsUpdated         BenchmarkPrompt[]             @relation(\"BenchmarkPromptUpdatedBy\")\n  tagsCreated            BenchmarkTag[]                @relation(\"BenchmarkTagCreatedBy\")\n  tagsUpdated            BenchmarkTag[]                @relation(\"BenchmarkTagUpdatedBy\")\n\n  // Community\n  updatesCreated     Update[]         @relation(\"UpdateCreatedBy\")\n  updatesUpdated     Update[]         @relation(\"UpdateUpdatedBy\")\n  updateReactions    UpdateReaction[]\n  suggestionsCreated Suggestion[]     @relation(\"SuggestionCreatedBy\")\n  suggestionsUpdated Suggestion[]     @relation(\"SuggestionUpdatedBy\")\n  suggestionVotes    SuggestionVote[]\n  teamMemberProfile  TeamMember?      @relation(\"TeamMemberUser\")\n  teamMembersCreated TeamMember[]     @relation(\"TeamMemberCreatedBy\")\n  teamMembersUpdated TeamMember[]     @relation(\"TeamMemberUpdatedBy\")\n\n  // Auth & Expertise\n  sessions             UserSession[]\n  emailVerifications   EmailVerificationToken[]\n  passwordResets       PasswordResetToken[]\n  permissions          UserPermission[]              @relation(\"UserPermissions\")\n  permissionsGranted   UserPermission[]              @relation(\"PermissionGranter\")\n  questionReviews      BenchmarkQuestionSubmission[] @relation(\"QuestionReviewer\")\n  expertiseHistory     UserExpertiseHistory[]        @relation(\"UserExpertiseHistory\")\n  expertiseAssignments UserExpertiseHistory[]        @relation(\"ExpertiseAssigner\")\n\n  // Reasoning & System\n  reasoningEntriesCreated ReasoningEntry[] @relation(\"ReasoningEntryCreatedBy\")\n  reasoningEntriesUpdated ReasoningEntry[] @relation(\"ReasoningEntryUpdatedBy\")\n  systemConfigsCreated    SystemConfig[]   @relation(\"SystemConfigCreatedBy\")\n  systemConfigsUpdated    SystemConfig[]   @relation(\"SystemConfigUpdatedBy\")\n\n  @@index([email])\n  @@index([username])\n  @@index([role])\n  @@index([isActive])\n  @@map(\"users\")\n}\n\nmodel UserExpertiseHistory {\n  id             String            @id @default(uuid())\n  userId         String            @map(\"user_id\")\n  expertiseLevel ExpertiseCategory @map(\"expertise_level\")\n  effectiveFrom  DateTime          @default(now()) @map(\"effective_from\")\n  effectiveTo    DateTime?         @map(\"effective_to\")\n  assignedBy     String?           @map(\"assigned_by\")\n  notes          String?\n  createdAt      DateTime          @default(now()) @map(\"created_at\")\n\n  user     User  @relation(\"UserExpertiseHistory\", fields: [userId], references: [id], onDelete: Cascade)\n  assigner User? @relation(\"ExpertiseAssigner\", fields: [assignedBy], references: [id])\n\n  @@index([userId, effectiveFrom, effectiveTo])\n  @@index([userId])\n  @@map(\"user_expertise_history\")\n}\n\nmodel UserPermission {\n  id         String    @id @default(uuid())\n  userId     String    @map(\"user_id\")\n  permission String\n  grantedBy  String?   @map(\"granted_by\")\n  grantedAt  DateTime  @default(now()) @map(\"granted_at\")\n  revokedAt  DateTime? @map(\"revoked_at\")\n\n  user    User  @relation(\"UserPermissions\", fields: [userId], references: [id], onDelete: Cascade)\n  granter User? @relation(\"PermissionGranter\", fields: [grantedBy], references: [id])\n\n  @@unique([userId, permission])\n  @@index([userId])\n  @@index([permission])\n  @@map(\"user_permissions\")\n}\n",
  "inlineSchemaHash": "13a663866bd80c65a7a81124b6b4ac26c07587afcd0e87f931bfbe906bda9f60",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"ExpertConsensus\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"question_id\"},{\"name\":\"expertMean\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"expert_mean\"},{\"name\":\"expertStd\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"expert_std\"},{\"name\":\"expertCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"expert_count\"},{\"name\":\"individualRatings\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"individual_ratings\"},{\"name\":\"firstRating\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"first_rating\"},{\"name\":\"lastRating\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_rating\"},{\"name\":\"lastRefreshed\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_refreshed\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"BenchmarkQuestion\",\"relationName\":\"BenchmarkQuestionToExpertConsensus\"}],\"dbName\":\"expert_consensus\"},\"BenchmarkScoreAggregate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelVersionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"model_version_id\"},{\"name\":\"scaleId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"scale_id\"},{\"name\":\"hyperparameterHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"hyperparameter_hash\"},{\"name\":\"hyperparameterConfig\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"hyperparameter_config\"},{\"name\":\"systemPromptId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"system_prompt_id\"},{\"name\":\"messagePromptId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"message_prompt_id\"},{\"name\":\"runCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"run_count\"},{\"name\":\"modelMean\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"model_mean\"},{\"name\":\"modelStd\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"model_std\"},{\"name\":\"modelMin\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"model_min\"},{\"name\":\"modelMax\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"model_max\"},{\"name\":\"modelMedian\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"model_median\"},{\"name\":\"expertConsensusMean\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"expert_consensus_mean\"},{\"name\":\"rmseVsExperts\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"rmse_vs_experts\"},{\"name\":\"firstRun\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"first_run\"},{\"name\":\"lastRun\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_run\"},{\"name\":\"experimentCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"experiment_count\"},{\"name\":\"lastRefreshed\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_refreshed\"},{\"name\":\"modelVersion\",\"kind\":\"object\",\"type\":\"ModelVersion\",\"relationName\":\"BenchmarkScoreAggregateToModelVersion\"},{\"name\":\"scale\",\"kind\":\"object\",\"type\":\"BenchmarkScale\",\"relationName\":\"BenchmarkScaleToBenchmarkScoreAggregate\"},{\"name\":\"systemPrompt\",\"kind\":\"object\",\"type\":\"BenchmarkPrompt\",\"relationName\":\"AggregateSystemPrompt\"},{\"name\":\"messagePrompt\",\"kind\":\"object\",\"type\":\"BenchmarkPrompt\",\"relationName\":\"AggregateMessagePrompt\"}],\"dbName\":\"benchmark_score_aggregates\"},\"UserSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"refreshTokenHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"refresh_token_hash\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ip_address\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_agent\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSession\"}],\"dbName\":\"user_sessions\"},\"EmailVerificationToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"used_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EmailVerificationTokenToUser\"}],\"dbName\":\"email_verification_tokens\"},\"PasswordResetToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"expires_at\"},{\"name\":\"usedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"used_at\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PasswordResetTokenToUser\"}],\"dbName\":\"password_reset_tokens\"},\"BenchmarkScale\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scaleType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"scale_type\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isValidated\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_validated\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_public\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BenchmarkScaleCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BenchmarkScaleUpdatedBy\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"BenchmarkQuestion\",\"relationName\":\"BenchmarkQuestionToBenchmarkScale\"},{\"name\":\"experiments\",\"kind\":\"object\",\"type\":\"BenchmarkExperiment\",\"relationName\":\"BenchmarkExperimentToBenchmarkScale\"},{\"name\":\"scoreAggregates\",\"kind\":\"object\",\"type\":\"BenchmarkScoreAggregate\",\"relationName\":\"BenchmarkScaleToBenchmarkScoreAggregate\"}],\"dbName\":\"benchmark_scales\"},\"BenchmarkQuestionSubmission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"promptValue\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"prompt_value\"},{\"name\":\"response1Value\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"response_1_value\"},{\"name\":\"response2Value\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"response_2_value\"},{\"name\":\"rating1\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"rating_1\"},{\"name\":\"rating2\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"rating_2\"},{\"name\":\"instructionPrompt\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"instruction_prompt\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reviewed_by\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"reviewed_at\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"rejection_reason\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BenchmarkQuestionSubmissionToUser\"},{\"name\":\"reviewer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"QuestionReviewer\"}],\"dbName\":\"benchmark_question_submissions\"},\"BenchmarkQuestion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scaleId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"scale_id\"},{\"name\":\"position\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"promptId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"prompt_id\"},{\"name\":\"promptValue\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"prompt_value\"},{\"name\":\"responseId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"response_id\"},{\"name\":\"responseValue\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"response_value\"},{\"name\":\"isValidated\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_validated\"},{\"name\":\"isUserSubmitted\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_user_submitted\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"adversarialType\",\"kind\":\"enum\",\"type\":\"AdversarialType\",\"dbName\":\"adversarial_type\"},{\"name\":\"adversarialCategory\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"adversarial_category\"},{\"name\":\"difficultyLevel\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"difficulty_level\"},{\"name\":\"expectedFailureMode\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"expected_failure_mode\"},{\"name\":\"successCriteria\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"success_criteria\"},{\"name\":\"adversarialMetadata\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"adversarial_metadata\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"scale\",\"kind\":\"object\",\"type\":\"BenchmarkScale\",\"relationName\":\"BenchmarkQuestionToBenchmarkScale\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BenchmarkQuestionCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BenchmarkQuestionUpdatedBy\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"BenchmarkRating\",\"relationName\":\"BenchmarkQuestionToBenchmarkRating\"},{\"name\":\"results\",\"kind\":\"object\",\"type\":\"BenchmarkResult\",\"relationName\":\"BenchmarkQuestionToBenchmarkResult\"},{\"name\":\"tags\",\"kind\":\"object\",\"type\":\"BenchmarkTagQuestionLink\",\"relationName\":\"BenchmarkQuestionToBenchmarkTagQuestionLink\"},{\"name\":\"expertConsensus\",\"kind\":\"object\",\"type\":\"ExpertConsensus\",\"relationName\":\"BenchmarkQuestionToExpertConsensus\"}],\"dbName\":\"benchmark_questions\"},\"BenchmarkRating\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"question_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"rating\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"reasoning\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"BenchmarkQuestion\",\"relationName\":\"BenchmarkQuestionToBenchmarkRating\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BenchmarkRatingToUser\"}],\"dbName\":\"benchmark_ratings\"},\"BenchmarkTag\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BenchmarkTagCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BenchmarkTagUpdatedBy\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"BenchmarkTagQuestionLink\",\"relationName\":\"BenchmarkTagToBenchmarkTagQuestionLink\"}],\"dbName\":\"benchmark_tags\"},\"BenchmarkTagQuestionLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"question_id\"},{\"name\":\"tagId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tag_id\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"BenchmarkQuestion\",\"relationName\":\"BenchmarkQuestionToBenchmarkTagQuestionLink\"},{\"name\":\"tag\",\"kind\":\"object\",\"type\":\"BenchmarkTag\",\"relationName\":\"BenchmarkTagToBenchmarkTagQuestionLink\"}],\"dbName\":\"benchmark_tag_question_link\"},\"BenchmarkExperiment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"scaleId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"scale_id\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"enum\",\"type\":\"EntityType\",\"dbName\":\"entity_type\"},{\"name\":\"entityIds\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"entity_ids\"},{\"name\":\"config\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"taskId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"task_id\"},{\"name\":\"estimatedCost\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"estimated_cost\"},{\"name\":\"actualCost\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"actual_cost\"},{\"name\":\"progress\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"startedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"started_at\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_message\"},{\"name\":\"reviewedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reviewed_by\"},{\"name\":\"reviewedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"reviewed_at\"},{\"name\":\"reviewNotes\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"review_notes\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_public\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BenchmarkExperimentToUser\"},{\"name\":\"scale\",\"kind\":\"object\",\"type\":\"BenchmarkScale\",\"relationName\":\"BenchmarkExperimentToBenchmarkScale\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExperimentUpdatedBy\"},{\"name\":\"reviewer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExperimentReviewer\"},{\"name\":\"results\",\"kind\":\"object\",\"type\":\"BenchmarkResult\",\"relationName\":\"BenchmarkExperimentToBenchmarkResult\"}],\"dbName\":\"benchmark_experiments\"},\"BenchmarkPrompt\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"promptType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"prompt_type\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BenchmarkPromptCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BenchmarkPromptUpdatedBy\"},{\"name\":\"systemPromptResults\",\"kind\":\"object\",\"type\":\"BenchmarkResult\",\"relationName\":\"SystemPromptResults\"},{\"name\":\"messagePromptResults\",\"kind\":\"object\",\"type\":\"BenchmarkResult\",\"relationName\":\"MessagePromptResults\"},{\"name\":\"systemPromptAggregates\",\"kind\":\"object\",\"type\":\"BenchmarkScoreAggregate\",\"relationName\":\"AggregateSystemPrompt\"},{\"name\":\"messagePromptAggregates\",\"kind\":\"object\",\"type\":\"BenchmarkScoreAggregate\",\"relationName\":\"AggregateMessagePrompt\"}],\"dbName\":\"benchmark_prompts\"},\"BenchmarkResult\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"experimentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"experiment_id\"},{\"name\":\"repeatNumber\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"repeat_number\"},{\"name\":\"modelVersionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"model_version_id\"},{\"name\":\"toolConfigurationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tool_configuration_id\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"question_id\"},{\"name\":\"hyperparameterConfig\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"hyperparameter_config\"},{\"name\":\"hyperparameterHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"hyperparameter_hash\"},{\"name\":\"systemPromptId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"system_prompt_id\"},{\"name\":\"messagePromptId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"message_prompt_id\"},{\"name\":\"score\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reasoning\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rawResponse\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"raw_response\"},{\"name\":\"responseTimeMs\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"response_time_ms\"},{\"name\":\"tokenUsage\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"token_usage\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"errorType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_type\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"error_message\"},{\"name\":\"apiCost\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"api_cost\"},{\"name\":\"isApproved\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_approved\"},{\"name\":\"approvalSource\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"approval_source\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"experiment\",\"kind\":\"object\",\"type\":\"BenchmarkExperiment\",\"relationName\":\"BenchmarkExperimentToBenchmarkResult\"},{\"name\":\"modelVersion\",\"kind\":\"object\",\"type\":\"ModelVersion\",\"relationName\":\"BenchmarkResultToModelVersion\"},{\"name\":\"toolConfiguration\",\"kind\":\"object\",\"type\":\"ToolConfiguration\",\"relationName\":\"BenchmarkResultToToolConfiguration\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"BenchmarkQuestion\",\"relationName\":\"BenchmarkQuestionToBenchmarkResult\"},{\"name\":\"systemPrompt\",\"kind\":\"object\",\"type\":\"BenchmarkPrompt\",\"relationName\":\"SystemPromptResults\"},{\"name\":\"messagePrompt\",\"kind\":\"object\",\"type\":\"BenchmarkPrompt\",\"relationName\":\"MessagePromptResults\"},{\"name\":\"reasoningEntries\",\"kind\":\"object\",\"type\":\"ReasoningEntry\",\"relationName\":\"BenchmarkResultToReasoningEntry\"}],\"dbName\":\"benchmark_results\"},\"ReasoningEntry\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"benchmarkResultId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"benchmark_result_id\"},{\"name\":\"reasoningType\",\"kind\":\"enum\",\"type\":\"ReasoningType\",\"dbName\":\"reasoning_type\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sequenceOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"sequence_order\"},{\"name\":\"confidenceLevel\",\"kind\":\"scalar\",\"type\":\"Float\",\"dbName\":\"confidence_level\"},{\"name\":\"processingTimeMs\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"processing_time_ms\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"benchmarkResult\",\"kind\":\"object\",\"type\":\"BenchmarkResult\",\"relationName\":\"BenchmarkResultToReasoningEntry\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReasoningEntryCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReasoningEntryUpdatedBy\"}],\"dbName\":\"reasoning_entries\"},\"Update\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tag\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"note\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"image_url\"},{\"name\":\"isPublished\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_published\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UpdateCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UpdateUpdatedBy\"},{\"name\":\"reactions\",\"kind\":\"object\",\"type\":\"UpdateReaction\",\"relationName\":\"UpdateToUpdateReaction\"}],\"dbName\":\"updates\"},\"UpdateReaction\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"updateId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"update_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"emojiType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"emoji_type\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"update\",\"kind\":\"object\",\"type\":\"Update\",\"relationName\":\"UpdateToUpdateReaction\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UpdateReactionToUser\"}],\"dbName\":\"update_reactions\"},\"Suggestion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"voteCount\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"vote_count\"},{\"name\":\"isVisible\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_visible\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SuggestionCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SuggestionUpdatedBy\"},{\"name\":\"votes\",\"kind\":\"object\",\"type\":\"SuggestionVote\",\"relationName\":\"SuggestionToSuggestionVote\"}],\"dbName\":\"suggestions\"},\"SuggestionVote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"suggestionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"suggestion_id\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"voteValue\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"vote_value\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"suggestion\",\"kind\":\"object\",\"type\":\"Suggestion\",\"relationName\":\"SuggestionToSuggestionVote\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SuggestionVoteToUser\"}],\"dbName\":\"suggestion_votes\"},\"TeamMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"display_name\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"bio\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatarUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"avatar_url\"},{\"name\":\"displayOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"display_order\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamMemberUser\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamMemberCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TeamMemberUpdatedBy\"}],\"dbName\":\"team_members\"},\"Model\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelFamilyId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"model_family_id\"},{\"name\":\"developer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"versions\",\"kind\":\"object\",\"type\":\"ModelVersion\",\"relationName\":\"ModelToModelVersion\"},{\"name\":\"toolConfigurations\",\"kind\":\"object\",\"type\":\"ToolConfiguration\",\"relationName\":\"ModelToToolConfiguration\"},{\"name\":\"modelFamily\",\"kind\":\"object\",\"type\":\"ModelFamily\",\"relationName\":\"ModelToModelFamily\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ModelCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ModelUpdatedBy\"}],\"dbName\":\"models\"},\"ModelVersion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"model_id\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"releaseDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"release_date\"},{\"name\":\"deprecationDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"deprecation_date\"},{\"name\":\"isLatest\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_latest\"},{\"name\":\"isAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_available\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"model\",\"kind\":\"object\",\"type\":\"Model\",\"relationName\":\"ModelToModelVersion\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ModelVersionCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ModelVersionUpdatedBy\"},{\"name\":\"evaluationEntities\",\"kind\":\"object\",\"type\":\"EvaluationEntity\",\"relationName\":\"EvaluationEntityToModelVersion\"},{\"name\":\"benchmarkResults\",\"kind\":\"object\",\"type\":\"BenchmarkResult\",\"relationName\":\"BenchmarkResultToModelVersion\"},{\"name\":\"hyperparameterLinks\",\"kind\":\"object\",\"type\":\"ModelHyperparameterLink\",\"relationName\":\"ModelHyperparameterLinkToModelVersion\"},{\"name\":\"scoreAggregates\",\"kind\":\"object\",\"type\":\"BenchmarkScoreAggregate\",\"relationName\":\"BenchmarkScoreAggregateToModelVersion\"},{\"name\":\"bigFiveProfile\",\"kind\":\"object\",\"type\":\"BigFiveProfile\",\"relationName\":\"BigFiveProfileToModelVersion\"}],\"dbName\":\"model_versions\"},\"ModelFamily\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"models\",\"kind\":\"object\",\"type\":\"Model\",\"relationName\":\"ModelToModelFamily\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ModelFamilyCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ModelFamilyUpdatedBy\"}],\"dbName\":\"model_families\"},\"Tool\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"developer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ToolCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ToolUpdatedBy\"},{\"name\":\"configurations\",\"kind\":\"object\",\"type\":\"ToolConfiguration\",\"relationName\":\"ToolToToolConfiguration\"}],\"dbName\":\"tools\"},\"ToolConfiguration\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"toolId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tool_id\"},{\"name\":\"modelId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"model_id\"},{\"name\":\"configurationName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"configuration_name\"},{\"name\":\"configurationSettings\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"configuration_settings\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"tool\",\"kind\":\"object\",\"type\":\"Tool\",\"relationName\":\"ToolToToolConfiguration\"},{\"name\":\"model\",\"kind\":\"object\",\"type\":\"Model\",\"relationName\":\"ModelToToolConfiguration\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ToolConfigCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ToolConfigUpdatedBy\"},{\"name\":\"evaluationEntities\",\"kind\":\"object\",\"type\":\"EvaluationEntity\",\"relationName\":\"EvaluationEntityToToolConfiguration\"},{\"name\":\"benchmarkResults\",\"kind\":\"object\",\"type\":\"BenchmarkResult\",\"relationName\":\"BenchmarkResultToToolConfiguration\"}],\"dbName\":\"tool_configurations\"},\"EvaluationEntity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"enum\",\"type\":\"EntityType\",\"dbName\":\"entity_type\"},{\"name\":\"modelVersionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"model_version_id\"},{\"name\":\"toolConfigurationId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tool_configuration_id\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"modelVersion\",\"kind\":\"object\",\"type\":\"ModelVersion\",\"relationName\":\"EvaluationEntityToModelVersion\"},{\"name\":\"toolConfiguration\",\"kind\":\"object\",\"type\":\"ToolConfiguration\",\"relationName\":\"EvaluationEntityToToolConfiguration\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EvaluationEntityCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"EvaluationEntityUpdatedBy\"},{\"name\":\"techProfileAnswers\",\"kind\":\"object\",\"type\":\"TechProfileAnswer\",\"relationName\":\"EvaluationEntityToTechProfileAnswer\"},{\"name\":\"responseProfileAnswers\",\"kind\":\"object\",\"type\":\"ResponseProfileAnswer\",\"relationName\":\"EvaluationEntityToResponseProfileAnswer\"},{\"name\":\"reviewAssignments\",\"kind\":\"object\",\"type\":\"ProfileReviewAssignment\",\"relationName\":\"EvaluationEntityToProfileReviewAssignment\"}],\"dbName\":\"evaluation_entities\"},\"BigFiveProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelVersionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"model_version_id\"},{\"name\":\"modelFamily\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"model_family\"},{\"name\":\"openness\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"conscientiousness\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"extraversion\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"agreeableness\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"neuroticism\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"modelVersion\",\"kind\":\"object\",\"type\":\"ModelVersion\",\"relationName\":\"BigFiveProfileToModelVersion\"}],\"dbName\":\"big_five_profiles\"},\"Hyperparameter\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"display_name\"},{\"name\":\"parameterType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"parameter_type\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"HyperparameterCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"HyperparameterUpdatedBy\"},{\"name\":\"modelLinks\",\"kind\":\"object\",\"type\":\"ModelHyperparameterLink\",\"relationName\":\"HyperparameterToModelHyperparameterLink\"}],\"dbName\":\"hyperparameters\"},\"ModelHyperparameterLink\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modelVersionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"model_version_id\"},{\"name\":\"hyperparameterId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"hyperparameter_id\"},{\"name\":\"isConfigurable\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_configurable\"},{\"name\":\"isRequired\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_required\"},{\"name\":\"lockedValue\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"locked_value\"},{\"name\":\"lockedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"locked_at\"},{\"name\":\"lockedReason\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"locked_reason\"},{\"name\":\"minValue\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"min_value\"},{\"name\":\"maxValue\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"max_value\"},{\"name\":\"stepValue\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"step_value\"},{\"name\":\"allowedValues\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"allowed_values\"},{\"name\":\"defaultValue\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"default_value\"},{\"name\":\"uiComponent\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"ui_component\"},{\"name\":\"uiOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"ui_order\"},{\"name\":\"helpText\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"help_text\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"modelVersion\",\"kind\":\"object\",\"type\":\"ModelVersion\",\"relationName\":\"ModelHyperparameterLinkToModelVersion\"},{\"name\":\"hyperparameter\",\"kind\":\"object\",\"type\":\"Hyperparameter\",\"relationName\":\"HyperparameterToModelHyperparameterLink\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ModelHyperparameterLinkCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ModelHyperparameterLinkUpdatedBy\"}],\"dbName\":\"model_hyperparameter_links\"},\"ResponseProfileTest\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"testType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"test_type\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isValidated\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_validated\"},{\"name\":\"isPublic\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_public\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"ResponseProfileQuestion\",\"relationName\":\"ResponseProfileQuestionToResponseProfileTest\"}],\"dbName\":\"response_profile_test\"},\"ResponseProfileQuestion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"testId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"test_id\"},{\"name\":\"questionType\",\"kind\":\"enum\",\"type\":\"QuestionType\",\"dbName\":\"question_type\"},{\"name\":\"questionKey\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"question_key\"},{\"name\":\"questionText\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"question_text\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"display_order\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isDisplayed\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_displayed\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"test\",\"kind\":\"object\",\"type\":\"ResponseProfileTest\",\"relationName\":\"ResponseProfileQuestionToResponseProfileTest\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResponseQuestionCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResponseQuestionUpdatedBy\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"ResponseProfileAnswer\",\"relationName\":\"ResponseProfileAnswerToResponseProfileQuestion\"}],\"dbName\":\"response_profile_questions\"},\"ResponseProfileAnswer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"question_id\"},{\"name\":\"entityType\",\"kind\":\"enum\",\"type\":\"EntityType\",\"dbName\":\"entity_type\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"entity_id\"},{\"name\":\"evaluationEntityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"evaluation_entity_id\"},{\"name\":\"booleanValue\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"boolean_value\"},{\"name\":\"numericValue\",\"kind\":\"scalar\",\"type\":\"Decimal\",\"dbName\":\"numeric_value\"},{\"name\":\"textValue\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"text_value\"},{\"name\":\"listValue\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"list_value\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reviewer_id\"},{\"name\":\"reviewAssignmentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"review_assignment_id\"},{\"name\":\"isApproved\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_approved\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"approved_at\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"approved_by\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"ResponseProfileQuestion\",\"relationName\":\"ResponseProfileAnswerToResponseProfileQuestion\"},{\"name\":\"reviewer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResponseProfileReviewer\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResponseProfileApprover\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ResponseProfileCreatedBy\"},{\"name\":\"reviewAssignment\",\"kind\":\"object\",\"type\":\"ProfileReviewAssignment\",\"relationName\":\"ProfileReviewAssignmentToResponseProfileAnswer\"},{\"name\":\"evaluationEntity\",\"kind\":\"object\",\"type\":\"EvaluationEntity\",\"relationName\":\"EvaluationEntityToResponseProfileAnswer\"}],\"dbName\":\"response_profile_answers\"},\"ProfileReviewAssignment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reviewer_id\"},{\"name\":\"entityType\",\"kind\":\"enum\",\"type\":\"EntityType\",\"dbName\":\"entity_type\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"entity_id\"},{\"name\":\"evaluationEntityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"evaluation_entity_id\"},{\"name\":\"assignedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"assigned_at\"},{\"name\":\"assignedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"assigned_by\"},{\"name\":\"dueDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"due_date\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReviewStatus\"},{\"name\":\"completedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"completed_at\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ReviewerAssignments\"},{\"name\":\"assigner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AssignedReviews\"},{\"name\":\"evaluationEntity\",\"kind\":\"object\",\"type\":\"EvaluationEntity\",\"relationName\":\"EvaluationEntityToProfileReviewAssignment\"},{\"name\":\"techProfileAnswers\",\"kind\":\"object\",\"type\":\"TechProfileAnswer\",\"relationName\":\"ProfileReviewAssignmentToTechProfileAnswer\"},{\"name\":\"responseAnswers\",\"kind\":\"object\",\"type\":\"ResponseProfileAnswer\",\"relationName\":\"ProfileReviewAssignmentToResponseProfileAnswer\"}],\"dbName\":\"profile_review_assignments\"},\"SystemConfig\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"configType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"config_type\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SystemConfigCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SystemConfigUpdatedBy\"}],\"dbName\":\"system_config\"},\"TechProfileQuestion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"enum\",\"type\":\"EntityType\",\"dbName\":\"entity_type\"},{\"name\":\"questionKey\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"question_key\"},{\"name\":\"questionText\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"question_text\"},{\"name\":\"questionLabel\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"question_label\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"questionType\",\"kind\":\"enum\",\"type\":\"QuestionType\",\"dbName\":\"question_type\"},{\"name\":\"displayOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"display_order\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isDisplayed\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_displayed\"},{\"name\":\"isFilterable\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_filterable\"},{\"name\":\"filterType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"filter_type\"},{\"name\":\"filterConfig\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"filter_config\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"updatedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"updated_by\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TechQuestionCreatedBy\"},{\"name\":\"updatedByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TechQuestionUpdatedBy\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"TechProfileAnswer\",\"relationName\":\"TechProfileAnswerToTechProfileQuestion\"}],\"dbName\":\"tech_profile_questions\"},\"TechProfileAnswer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"enum\",\"type\":\"EntityType\",\"dbName\":\"entity_type\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"entity_id\"},{\"name\":\"evaluationEntityId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"evaluation_entity_id\"},{\"name\":\"questionId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"question_id\"},{\"name\":\"answer\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"answer\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"reviewerId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"reviewer_id\"},{\"name\":\"reviewAssignmentId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"review_assignment_id\"},{\"name\":\"isApproved\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_approved\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"created_by\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"approved_at\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"approved_by\"},{\"name\":\"question\",\"kind\":\"object\",\"type\":\"TechProfileQuestion\",\"relationName\":\"TechProfileAnswerToTechProfileQuestion\"},{\"name\":\"reviewer\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TechProfileReviewer\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TechProfileApprover\"},{\"name\":\"createdByUser\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TechProfileCreatedBy\"},{\"name\":\"reviewAssignment\",\"kind\":\"object\",\"type\":\"ProfileReviewAssignment\",\"relationName\":\"ProfileReviewAssignmentToTechProfileAnswer\"},{\"name\":\"evaluationEntity\",\"kind\":\"object\",\"type\":\"EvaluationEntity\",\"relationName\":\"EvaluationEntityToTechProfileAnswer\"}],\"dbName\":\"tech_profile_answers\"},\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"password_hash\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"first_name\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"last_name\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_verified\"},{\"name\":\"emailVerifiedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"email_verified_at\"},{\"name\":\"lastLoginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"last_login_at\"},{\"name\":\"failedLoginAttempts\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"failed_login_attempts\"},{\"name\":\"lockedUntil\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"locked_until\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"modelsCreated\",\"kind\":\"object\",\"type\":\"Model\",\"relationName\":\"ModelCreatedBy\"},{\"name\":\"modelsUpdated\",\"kind\":\"object\",\"type\":\"Model\",\"relationName\":\"ModelUpdatedBy\"},{\"name\":\"modelVersionsCreated\",\"kind\":\"object\",\"type\":\"ModelVersion\",\"relationName\":\"ModelVersionCreatedBy\"},{\"name\":\"modelVersionsUpdated\",\"kind\":\"object\",\"type\":\"ModelVersion\",\"relationName\":\"ModelVersionUpdatedBy\"},{\"name\":\"toolsCreated\",\"kind\":\"object\",\"type\":\"Tool\",\"relationName\":\"ToolCreatedBy\"},{\"name\":\"toolsUpdated\",\"kind\":\"object\",\"type\":\"Tool\",\"relationName\":\"ToolUpdatedBy\"},{\"name\":\"toolConfigsCreated\",\"kind\":\"object\",\"type\":\"ToolConfiguration\",\"relationName\":\"ToolConfigCreatedBy\"},{\"name\":\"toolConfigsUpdated\",\"kind\":\"object\",\"type\":\"ToolConfiguration\",\"relationName\":\"ToolConfigUpdatedBy\"},{\"name\":\"evaluationEntitiesCreated\",\"kind\":\"object\",\"type\":\"EvaluationEntity\",\"relationName\":\"EvaluationEntityCreatedBy\"},{\"name\":\"evaluationEntitiesUpdated\",\"kind\":\"object\",\"type\":\"EvaluationEntity\",\"relationName\":\"EvaluationEntityUpdatedBy\"},{\"name\":\"modelFamiliesCreated\",\"kind\":\"object\",\"type\":\"ModelFamily\",\"relationName\":\"ModelFamilyCreatedBy\"},{\"name\":\"modelFamiliesUpdated\",\"kind\":\"object\",\"type\":\"ModelFamily\",\"relationName\":\"ModelFamilyUpdatedBy\"},{\"name\":\"reviewAssignments\",\"kind\":\"object\",\"type\":\"ProfileReviewAssignment\",\"relationName\":\"ReviewerAssignments\"},{\"name\":\"assignedReviews\",\"kind\":\"object\",\"type\":\"ProfileReviewAssignment\",\"relationName\":\"AssignedReviews\"},{\"name\":\"techProfileAnswers\",\"kind\":\"object\",\"type\":\"TechProfileAnswer\",\"relationName\":\"TechProfileReviewer\"},{\"name\":\"techProfileApprovals\",\"kind\":\"object\",\"type\":\"TechProfileAnswer\",\"relationName\":\"TechProfileApprover\"},{\"name\":\"techProfileCreated\",\"kind\":\"object\",\"type\":\"TechProfileAnswer\",\"relationName\":\"TechProfileCreatedBy\"},{\"name\":\"responseProfileAnswers\",\"kind\":\"object\",\"type\":\"ResponseProfileAnswer\",\"relationName\":\"ResponseProfileReviewer\"},{\"name\":\"responseProfileApprovals\",\"kind\":\"object\",\"type\":\"ResponseProfileAnswer\",\"relationName\":\"ResponseProfileApprover\"},{\"name\":\"responseProfileCreated\",\"kind\":\"object\",\"type\":\"ResponseProfileAnswer\",\"relationName\":\"ResponseProfileCreatedBy\"},{\"name\":\"techQuestionsCreated\",\"kind\":\"object\",\"type\":\"TechProfileQuestion\",\"relationName\":\"TechQuestionCreatedBy\"},{\"name\":\"techQuestionsUpdated\",\"kind\":\"object\",\"type\":\"TechProfileQuestion\",\"relationName\":\"TechQuestionUpdatedBy\"},{\"name\":\"responseQuestionsCreated\",\"kind\":\"object\",\"type\":\"ResponseProfileQuestion\",\"relationName\":\"ResponseQuestionCreatedBy\"},{\"name\":\"responseQuestionsUpdated\",\"kind\":\"object\",\"type\":\"ResponseProfileQuestion\",\"relationName\":\"ResponseQuestionUpdatedBy\"},{\"name\":\"hyperparametersCreated\",\"kind\":\"object\",\"type\":\"Hyperparameter\",\"relationName\":\"HyperparameterCreatedBy\"},{\"name\":\"hyperparametersUpdated\",\"kind\":\"object\",\"type\":\"Hyperparameter\",\"relationName\":\"HyperparameterUpdatedBy\"},{\"name\":\"hyperparameterLinksCreated\",\"kind\":\"object\",\"type\":\"ModelHyperparameterLink\",\"relationName\":\"ModelHyperparameterLinkCreatedBy\"},{\"name\":\"hyperparameterLinksUpdated\",\"kind\":\"object\",\"type\":\"ModelHyperparameterLink\",\"relationName\":\"ModelHyperparameterLinkUpdatedBy\"},{\"name\":\"benchmarkScalesCreated\",\"kind\":\"object\",\"type\":\"BenchmarkScale\",\"relationName\":\"BenchmarkScaleCreatedBy\"},{\"name\":\"benchmarkScalesUpdated\",\"kind\":\"object\",\"type\":\"BenchmarkScale\",\"relationName\":\"BenchmarkScaleUpdatedBy\"},{\"name\":\"questionSubmissions\",\"kind\":\"object\",\"type\":\"BenchmarkQuestionSubmission\",\"relationName\":\"BenchmarkQuestionSubmissionToUser\"},{\"name\":\"questionsCreated\",\"kind\":\"object\",\"type\":\"BenchmarkQuestion\",\"relationName\":\"BenchmarkQuestionCreatedBy\"},{\"name\":\"questionsUpdated\",\"kind\":\"object\",\"type\":\"BenchmarkQuestion\",\"relationName\":\"BenchmarkQuestionUpdatedBy\"},{\"name\":\"questionRatings\",\"kind\":\"object\",\"type\":\"BenchmarkRating\",\"relationName\":\"BenchmarkRatingToUser\"},{\"name\":\"experiments\",\"kind\":\"object\",\"type\":\"BenchmarkExperiment\",\"relationName\":\"BenchmarkExperimentToUser\"},{\"name\":\"experimentsUpdated\",\"kind\":\"object\",\"type\":\"BenchmarkExperiment\",\"relationName\":\"ExperimentUpdatedBy\"},{\"name\":\"experimentsReviewed\",\"kind\":\"object\",\"type\":\"BenchmarkExperiment\",\"relationName\":\"ExperimentReviewer\"},{\"name\":\"promptsCreated\",\"kind\":\"object\",\"type\":\"BenchmarkPrompt\",\"relationName\":\"BenchmarkPromptCreatedBy\"},{\"name\":\"promptsUpdated\",\"kind\":\"object\",\"type\":\"BenchmarkPrompt\",\"relationName\":\"BenchmarkPromptUpdatedBy\"},{\"name\":\"tagsCreated\",\"kind\":\"object\",\"type\":\"BenchmarkTag\",\"relationName\":\"BenchmarkTagCreatedBy\"},{\"name\":\"tagsUpdated\",\"kind\":\"object\",\"type\":\"BenchmarkTag\",\"relationName\":\"BenchmarkTagUpdatedBy\"},{\"name\":\"updatesCreated\",\"kind\":\"object\",\"type\":\"Update\",\"relationName\":\"UpdateCreatedBy\"},{\"name\":\"updatesUpdated\",\"kind\":\"object\",\"type\":\"Update\",\"relationName\":\"UpdateUpdatedBy\"},{\"name\":\"updateReactions\",\"kind\":\"object\",\"type\":\"UpdateReaction\",\"relationName\":\"UpdateReactionToUser\"},{\"name\":\"suggestionsCreated\",\"kind\":\"object\",\"type\":\"Suggestion\",\"relationName\":\"SuggestionCreatedBy\"},{\"name\":\"suggestionsUpdated\",\"kind\":\"object\",\"type\":\"Suggestion\",\"relationName\":\"SuggestionUpdatedBy\"},{\"name\":\"suggestionVotes\",\"kind\":\"object\",\"type\":\"SuggestionVote\",\"relationName\":\"SuggestionVoteToUser\"},{\"name\":\"teamMemberProfile\",\"kind\":\"object\",\"type\":\"TeamMember\",\"relationName\":\"TeamMemberUser\"},{\"name\":\"teamMembersCreated\",\"kind\":\"object\",\"type\":\"TeamMember\",\"relationName\":\"TeamMemberCreatedBy\"},{\"name\":\"teamMembersUpdated\",\"kind\":\"object\",\"type\":\"TeamMember\",\"relationName\":\"TeamMemberUpdatedBy\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"UserSession\",\"relationName\":\"UserToUserSession\"},{\"name\":\"emailVerifications\",\"kind\":\"object\",\"type\":\"EmailVerificationToken\",\"relationName\":\"EmailVerificationTokenToUser\"},{\"name\":\"passwordResets\",\"kind\":\"object\",\"type\":\"PasswordResetToken\",\"relationName\":\"PasswordResetTokenToUser\"},{\"name\":\"permissions\",\"kind\":\"object\",\"type\":\"UserPermission\",\"relationName\":\"UserPermissions\"},{\"name\":\"permissionsGranted\",\"kind\":\"object\",\"type\":\"UserPermission\",\"relationName\":\"PermissionGranter\"},{\"name\":\"questionReviews\",\"kind\":\"object\",\"type\":\"BenchmarkQuestionSubmission\",\"relationName\":\"QuestionReviewer\"},{\"name\":\"expertiseHistory\",\"kind\":\"object\",\"type\":\"UserExpertiseHistory\",\"relationName\":\"UserExpertiseHistory\"},{\"name\":\"expertiseAssignments\",\"kind\":\"object\",\"type\":\"UserExpertiseHistory\",\"relationName\":\"ExpertiseAssigner\"},{\"name\":\"reasoningEntriesCreated\",\"kind\":\"object\",\"type\":\"ReasoningEntry\",\"relationName\":\"ReasoningEntryCreatedBy\"},{\"name\":\"reasoningEntriesUpdated\",\"kind\":\"object\",\"type\":\"ReasoningEntry\",\"relationName\":\"ReasoningEntryUpdatedBy\"},{\"name\":\"systemConfigsCreated\",\"kind\":\"object\",\"type\":\"SystemConfig\",\"relationName\":\"SystemConfigCreatedBy\"},{\"name\":\"systemConfigsUpdated\",\"kind\":\"object\",\"type\":\"SystemConfig\",\"relationName\":\"SystemConfigUpdatedBy\"}],\"dbName\":\"users\"},\"UserExpertiseHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"expertiseLevel\",\"kind\":\"enum\",\"type\":\"ExpertiseCategory\",\"dbName\":\"expertise_level\"},{\"name\":\"effectiveFrom\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"effective_from\"},{\"name\":\"effectiveTo\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"effective_to\"},{\"name\":\"assignedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"assigned_by\"},{\"name\":\"notes\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserExpertiseHistory\"},{\"name\":\"assigner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ExpertiseAssigner\"}],\"dbName\":\"user_expertise_history\"},\"UserPermission\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"user_id\"},{\"name\":\"permission\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"grantedBy\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"granted_by\"},{\"name\":\"grantedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"granted_at\"},{\"name\":\"revokedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"revoked_at\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserPermissions\"},{\"name\":\"granter\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PermissionGranter\"}],\"dbName\":\"user_permissions\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

